---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Installing andrewrothstein.gcc_toolbox
  ansible.builtin.include_role:
    name: andrewrothstein.gcc_toolbox
- name: Installing andrewrothstein.openssl
  ansible.builtin.include_role:
    name: andrewrothstein.openssl
  vars:
    openssl_include_dev_pkgs: true
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'

- name: Downloading {{ stunnel_tgz_url }}
  become: true
  become_user: root
  ansible.builtin.get_url:
    url: '{{ stunnel_tgz_url }}'
    dest: '{{ stunnel_tmp_tgz }}'
    checksum: '{{ stunnel_checksum }}'
    mode: '644'

- name: Unarchive {{ stunnel_tmp_tgz }} to {{ stunnel_parent_src_dir }}
  become: true
  become_user: root
  ansible.builtin.unarchive:
    remote_src: true
    src: '{{ stunnel_tmp_tgz }}'
    dest: '{{ stunnel_parent_src_dir }}'
    creates: '{{ stunnel_src_dir }}'

- name: Configure
  become: true
  become_user: root
  ansible.builtin.command: '{{ stunnel_src_dir }}/configure --prefix={{ stunnel_install_prefix }}'
  args:
    chdir: '{{ stunnel_src_dir }}'
    creates: '{{ stunnel_src_dir }}/Makefile'

- name: Make
  become: true
  become_user: root
  ansible.builtin.command: make
  args:
    chdir: '{{ stunnel_src_dir }}'
    creates: '{{ stunnel_src_dir }}/src/stunnel'

- name: Make install
  become: true
  become_user: root
  ansible.builtin.command: make install
  args:
    chdir: '{{ stunnel_src_dir }}'
    creates: /usr/local/bin/stunnel

- name: Make config directory
  become: true
  become_user: root
  with_items:
    - '{{ stunnel_conf_dir }}'
    - '{{ stunnel_profile_dir }}'
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '755'

- name: Install the stunnel entry point
  become: true
  become_user: root
  with_items:
    - f: boot-stunnel.sh
      d: '{{ stunnel_install_bin_dir }}'
      m: '755'
  ansible.builtin.template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m }}'

- name: Cleanup
  become: true
  become_user: root
  when: stunnel_cleanup
  ansible.builtin.file:
    path: '{{ stunnel_src_dir }}'
    state: absent
